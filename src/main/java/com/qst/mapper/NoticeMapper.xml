<?xml version="1.0" encoding="UTF-8" ?>

<!-- mybatis 框架头文件声明，类似spring环境，均需要加入头文件 -->
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.qst.mapper.NoticeMapper">

    <insert id="addNotice">
        insert into tb_notice (notice_name,notice_context,release_time,publisher,target) values (#{noticeName},#{noticeContext},#{releaseTime},#{publisher},#{target})
    </insert>

    <resultMap id="userNoticeVo" type="com.qst.vo.UserNoticeVo">
        <id column="id" property="id"></id>
        <result column="user_name" property="userName"></result>
        <result column="notice_name" property="noticeName"></result>
        <result column="notice_context" property="noticeContext"></result>
        <result column="publisher" property="publisher"></result>
        <result column="user_name" property="userName"></result>
        <result column="release_time" property="releaseTime"></result>
    </resultMap>

    <select id="getNoticeList" resultMap="userNoticeVo">
        select id,notice_name,release_time,user_name from
        (select t1.id,notice_name,notice_context,release_time,user_name,target from tb_notice t1 INNER JOIN tb_user t2 on t1.publisher=t2.id) as tb1
        <where>
        target=1
        <if test="keyWord!=null and keyWord!=''">

            and(
            id like concat('%',#{keyWord},'%')
            or notice_name like concat('%',#{keyWord},'%')
            or user_name like concat('%',#{keyWord},'%')
            or release_time like concat('%',#{keyWord},'%')
            )
        </if>

    </where>
        <if test="sortField != null and sortField != ''">
            ORDER BY #{sortField} #{sortOrder}
        </if>
    </select>

    <select id="getAll" resultType="notice">
        select * from tb_notice where target=1
    </select>

    <select id="getNoticeById" resultType="notice">
        select * from tb_notice where id=#{id}
    </select>

    <update id="editNotice">
        update tb_notice set notice_name=#{noticeName},notice_context=#{noticeContext} where id=#{id}
    </update>

    <select id="getOneNoticeById" resultMap="userNoticeVo">
        select t1.id,notice_name,notice_context,release_time,user_name,target from tb_notice t1 INNER JOIN tb_user t2 on t1.publisher=t2.id
        where target=1 and t1.id=#{id}
    </select>

    <update id="deleteOneNotice">
        update tb_notice set target=0,delete_time=#{currentTime} where id=#{id}
    </update>

    <update id="deleteSelectedNotice">
        UPDATE tb_notice
        SET target=0,delete_time=#{currentTime}
        WHERE id IN
        <foreach collection="ids" open="(" separator="," close=")" item="temp">
            #{temp}
        </foreach>
    </update>
</mapper>
